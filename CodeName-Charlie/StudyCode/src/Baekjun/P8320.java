
// 상근이는 변의 길이가 1인 정사각형 n개를 가지고 있다. 이 정사각형을 이용해서 만들 수 있는 직사각형의 개수는 총 몇 개일까?
// 두 직사각형 A와 B가 있을 때, A를 이동, 회전시켜서 B를 만들 수 없으면, 두 직사각형은 다르다고 한다.
// 직사각형을 만들 때, 정사각형을 변형시키거나, 한 정사각형 위에 다른 정사각형을 놓을 수 없다. 또, 직사각형은 정사각형으로 꽉 차있어야 한다.

package Baekjun;

// 정사각형의 개수를 나타내는 변수 n을 입력 받자.
// 직사각형은 정사각형 한 개로 이루어진 직사각형, 두 개로 이루어진 직사각형... N개로 이루어진 직사각형으로 나눌 수 있고,
// 각각 그 시작점은 1x1, 2x2, ... NxN부터 시작한다.(ex)1x2와 2x1은 동일한 직사각형으로 보기 때문.)
// 변수 cnt를 생성해서 각각의 조건에 해당되는 경우의 수를 cnt에 순차적으로 더하고,
// 값을 출력하자.

import java.util.Scanner;

public class P8320 {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		int n = sc.nextInt(); // 정사각형의 개수를 나타내는 변수 n을 입력 받는다.
		
		int cnt = n; // 변수 cnt를 선언하고, 그 값을 n으로 초기화 한다.
		// (n으로 초기화 하는 이유는 최초 정사각형 1개로 이루어진 직사각형의 개수가 n이기 때문에, 이를 변수 cnt에 더한 것이다.)
		
		int number = 1; // 직사각형의 가로 길이를 정하기 위한 변수 number를 선언하고, 1로 초기화한다.
		for(;;) { // for문을 반복하도록 한다.
			if(n - (number*number) >= 0) { // 만약 변수 n이 number x number보다 크거나 같다면,
				// (직사각형의 가로 길이가 number일때, 시작값은 number(가로) x number(세로)이기 때문에 이를 크기 비교하도록 한다.)
				number++; // number를 1 증가시키고,
			}
			else { // 아니라면,
				number--; // 1 감소시키고,
				break; // 반복문을 종료한다.
			}
		}
		
		for(int idx = 2; idx <= number; idx++) { // 직사각형의 가로 길이가 1인 경우는 이미 cnt에 더해져 있기 때문에,
			// 2인 경우부터 number인 경우까지 반복문을 실행 한다. 
			int idx2 = idx; // 최초 시작은 가로와 세로 길이가 같은 지점부터 생각하기 때문에, 변수 idx2를 선언하고, 그 값을 idx로 초기화 한다.  
			for(;;) { // 반복문을 실행한다.
				if(n - idx*idx2 >= 0) { // 만약 가로와 세로길이를 곱한 값이 n보다 작거나 같다면,
					cnt++; // cnt를 1 증가시키고,
					idx2++; // 세로의 길이도 1씩 늘려나간다.
				}
				else { // 아니라면
					break; // 반복문을 종료하고,
				}
			}
		}
		System.out.println(cnt); // 변수 cnt를 출력한다.
	}
}
