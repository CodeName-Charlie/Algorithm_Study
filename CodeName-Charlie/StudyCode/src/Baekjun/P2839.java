
// 상근이는 요즘 설탕공장에서 설탕을 배달하고 있다. 상근이는 지금 사탕가게에 설탕을 정확하게 N킬로그램을 배달해야 한다. 
// 설탕공장에서 만드는 설탕은 봉지에 담겨져 있다. 봉지는 3킬로그램 봉지와 5킬로그램 봉지가 있다.
// 상근이는 귀찮기 때문에, 최대한 적은 봉지를 들고 가려고 한다.
// 예를 들어, 18킬로그램 설탕을 배달해야 할 때, 3킬로그램 봉지 6개를 가져가도 되지만, 5킬로그램 3개와 3킬로그램 1개를 배달하면, 더 적은 개수의 봉지를 배달할 수 있다.
// 상근이가 설탕을 정확하게 N킬로그램 배달해야 할 때, 봉지 몇 개를 가져가면 되는지 그 수를 구하는 프로그램을 작성하시오.

package Baekjun;

// 변수 N을 입력 받자.
// 가져가야 할 설탕 봉지 수를 저장할 크기 3인 배열을 생성하고,
// 조건을 세 가지(3kg 봉지만 사용하는 경우, 5kg 봉지만 사용하는 경우, 둘 다 사용하는 경우)로 나눠 저장하자.
// 배열을 정렬하고, 가장 작은 수를 출력하자.

import java.util.Arrays;
import java.util.Scanner;

public class P2839 {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);

		int N = sc.nextInt(); // 배달해야 할 설탕의 무게를 나타내는 변수 N을 입력 받는다.

		int[] sugar = new int[3]; // 가져가야 할 설탕 봉지 수를 저장할 크기 3인 배열, sugar를 생성한다.
		// 배열의 요소에는 각각 3kg 봉지만 사용하는 경우, 5kg 봉지만 사용하는 경우, 둘 다 사용하는 경우를 나누어 저장한다. 
		if (N % 5 == 0) { // N을 5로 나누었을 때, 나머지가 0인 경우(5kg 봉지만 사용하는 경우)
			sugar[0] = N / 5; // N을 5로 나누었을 때의 몫(5kg 봉지 수)를 sugar 배열의 인덱스 0번 값으로 저장한다.
		}

		if (N % 3 == 0) { // N을 3으로 나누었을 때, 나머지가 0인 경우(3kg 봉지만 사용하는 경우)
			sugar[1] = N / 3; // N을 3으로 나누었을 때의 몫(3kg 봉지 수)를 sugar 배열의 인덱스 1번 값으로 저장한다.
		}
		// 두 종류의 봉지를 다 사용하는 경우의 결과 값을 구하기 위해,
		int cnt = 0; // 봉지 수를 세는 변수 cnt를 선언하고, 0으로 초기화한다.
		while (N >= 0) { // while문을 통해 봉지 수를 새는 식을 작성한다. N이 0보다 작아지면 조건문을 종료하도록 설정한다.
			N -= 3; // N에서 3을 뺀다.
			cnt++; // cnt를 1증가시킨다.
			if (N >= 0 && N % 5 == 0) { // 만약, N에서 3을 뺀 값이 양의 정수이고, 5의 배수라면, 
				cnt += N / 5; // 그 값을 5로 나눈 몫을 cnt에 더한 뒤,
				sugar[2] = cnt; // sugar 배열의 인덱스 2번 값으로 저장한다.
				break;
			}
		}
		Arrays.sort(sugar); // Arrays.sort 메서드를 사용해 sugar 배열을 정렬한다.
		
		if(sugar[0] == 0 && sugar[1] == 0 && sugar[2] == 0) { // 만약 배열의 모든 요소 값이 0 이라면,(위의 세 가지 조건을 하나도 만족하지 못했다면,)
			System.out.println(-1); // -1을 출력한다.
		}
		else {
			if(sugar[0] != 0) { // 만약 인덱스 0번 값이 0(값이 존재x)이 아니라면,(정렬을 했기 때문에, 앞쪽에 있을 수록 값이 작다.)
				System.out.println(sugar[0]); // 0번 값을 출력한다.
			}
			else {
				if(sugar[1] != 0) { // 인덱스 0번 값은 0이지만, 1번 값은 0이 아니라면,
					System.out.println(sugar[1]); // 1번 값을 출력한다.
				}
				else { // 인덱스 0번과 1번값이 0이고, 2번 값이 0이 아니라면,
					System.out.println(sugar[2]); // 2번 값을 출력한다.
				}
			}
		}
	}
}
