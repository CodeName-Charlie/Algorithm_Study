
// 매일 밤, 정인이는 상근이에게 이메일을 보낸다. 정인이는 자신의 이메일이 해킹당할 수도 있다는 생각에, 내용을 항상 암호화해서 보낸다.
// 정인이가 사용하는 암호 알고리즘은 다음과 같다. 정인이가 보내는 메시지는 총 N글자이다.
// 먼저, 정인이는 R<=C이고, R*C=N인 R과 C를 고른다. 만약, 그러한 경우가 여러 개일 경우, R이 큰 값을 선택한다.
// 그 다음, 행이 R개고, 열이 C개인 행렬을 만든다.
// 이제 메시지를 행렬에 옮긴다. 첫 번째 행의 첫 번째 열부터 C번째 열까지 메시지를 순서대로 옮긴 뒤, 남은 메시지는 두 번째 행, 세 번째 행,... R번째 행에 첫 번째 행을 채운 방법과 동일한 순서대로 옮긴다.
// 행렬에 모두 메시지를 옮겼다면, 이 것을 첫 번째 열의 첫 번째 행부터 R번째 행까지 차례대로 읽으면서 다시 받아 적는다. 그 다음에, 두 번째 열, 세 번째 열,..., C번째 열에 쓰여 있는 문자를 첫 번째 열을 읽은 방법과 동일하게 받아적는다.
// 상근이는 매일 밤 정인이의 메시지를 해독하는데 지쳤다. 정인이의 암호 이메일이 주어졌을 때, 이를 해독하는 프로그램을 작성하시오.

package Baekjun;

// 메세지를 입력 받는다.
// 메세지의 길이를 기준으로, 메세지 길이의 제곱근에 해당하는 길이까지 값을 확인해 두 변수 R과 C를 설정한다.
// 변수 R과 C를 바탕으로 배열을 생성하고, 메세지의 글자를 문자로 나눠 대입 한다.
// 순서를 바꿔 문자를 출력한다.

import java.util.Scanner;

public class P2999 {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		String message = sc.next(); // 문자열 message를 입력 받는다.
		char[] alphabet = message.toCharArray(); // toCharArray 메서드를 통해 message 문자열을 각각의 문자로 나누어 저장한 alphabet 배열을 생성하고, 
		int N = message.length(); // message의 크기를 변수 N으로 선언한다.
		
		int R = 0; // 행 값이 될 변수 R과
		int C = 0; // 열 값이 될 변수 C를 각각 선언하고, 0으로 초기화한다.
		for(int i = 1; i <= Math.sqrt(N); i++) { // 반복문을 N의 제곱근까지 반복한다.
			// (R과 C의 차가 가장 적은 값이어야 하기 때문에, for문의 실행 범위를 제곱근까지만으로 범위를 설정한다.)
			if(N%i == 0 && i > R) { // 조건문을 통해, i의 값이 N의 약수이며, R보다 큰 경우,
				R = i; // R에는 i를 대입하도록 하고,
				C = N/R; // C에는 N/R(R * C = N이기 때문.)을 대입하도록 한다.
			}
		}
		
		char[][] arr = new char[R][C]; // R행 C열의 배열 arr를 생성한다.
		
		int idx = 0;
		for(int col = 0; col < C; col++) { // 주어진 값을 역으로 탐색해야하기 때문에,
			for(int row = 0; row < R; row++) { // 행 인덱스를 먼저 증가시키고, 열 인덱스를 나중에 증가시킨다.
				arr[row][col] = alphabet[idx]; // 배열에 차례대로 값을 대입한다.
				idx++;
			}
		}
		for(int row = 0; row < R; row++) { // 원래 값을 도출하기 위해,
			for(int col = 0; col < C; col++) { // 이번에는 열 인덱스를 먼저 증가시키고, 행 인덱스를 나중에 증가시키며,
				System.out.print(arr[row][col]); // 값을 순차적으로 출력한다.
			}
		}
	}
}
